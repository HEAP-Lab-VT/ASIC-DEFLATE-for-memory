# variables to be set by user
# TARGET = target executable
# MODULES = fully-qualified scala class name of each module
# SCALA_SOURCE = Scala prerequisites
# CPP_SOURCE = C++ source prerequisites
# CPP_HEADER = C++ header prerequisites
# CFLAGS = additional g++ flags

ifeq ($(findstring --trace,$(TRACE)),--trace)
ifeq ($(findstring --trace-underscore,$(TRACE)),--trace-underscore)
TRACE_SUFFIX := _trace-underscore
else
TRACE_SUFFIX := _trace
endif
TRACE_SIMPLESUFFIX := _trace
else
TRACE_SUFFIX := _
TRACE_SIMPLESUFFIX := _
endif

INCLUDES = -I$(VERILATOR_ROOT)/include -I.
CFLAGS = -ggdb
VLFLAGS := -Wno-WIDTH -Mdir . -CFLAGS '$(CFLAGS)'

$(TARGET): $(TARGET)$(TRACE_SUFFIX)
	cp $(TARGET)$(TRACE_SUFFIX) $(TARGET)

V%$(TRACE_SUFFIX).mk: %.v
	verilator $(VLFLAGS) $(TRACE) -cc $<
	cp V$*.mk V$*$(TRACE_SUFFIX).mk

include $(MODULES:%=V%$(TRACE_SUFFIX).mk) # sets VK_GLOBAL_OBJS and VERILATOR_ROOT

# not sure why we need this; it's included by the verilator-generated makefile
# $(MODS:%=V%__ALL.a): V%__ALL.a: V%.mk
# 	$(MAKE) -f $< $@

$(TARGET)$(TRACE_SUFFIX): $(OBJS:%.o=%$(TRACE_SIMPLESUFFIX).o) $(MODULES:%=V%__ALL.a) $(VK_GLOBAL_OBJS)
	g++ $^ -o $@



OBJ_FLAGS := -c $(CFLAGS)
DEP_FLAGS := -MM -MG $(CFLAGS)

ifeq ($(findstring --trace,$(TRACE)),--trace)
TRACE_FLAGS := -DTRACE_ENABLE=true
else
TRACE_FLAGS := 
endif


HuffmanTest$(TRACE_SIMPLESUFFIX).o: $(root)/src/test/cpp/HuffmanTest.cpp HuffmanParameters.h
	g++ $(OBJ_FLAGS) $(INCLUDES) -include HuffmanParameters.h $(TRACE_FLAGS) $< -o $@
HuffmanTest$(TRACE_SIMPLESUFFIX).d: $(root)/src/test/cpp/HuffmanTest.cpp
	g++ $(DEP_FLAGS) $(INCLUDES) -include HuffmanParameters.h $(TRACE_FLAGS) $< -o $@
include HuffmanTest$(TRACE_SIMPLESUFFIX).d

DeflateTest$(TRACE_SIMPLESUFFIX).o: $(root)/src/test/cpp/DeflateTest.cpp DeflateParameters.h
	g++ $(OBJ_FLAGS) $(INCLUDES) -include DeflateParameters.h $(TRACE_FLAGS) $< -o $@
DeflateTest$(TRACE_SIMPLESUFFIX).d: $(root)/src/test/cpp/DeflateTest.cpp
	g++ $(DEP_FLAGS) $(INCLUDES) -include DeflateParameters.h $(TRACE_FLAGS) $< -o $@
include DeflateTest$(TRACE_SIMPLESUFFIX).d

LZCOMPRESSOR_CFLAGS := -DMODNAME=LZCompressor \
	-DIN_CHARS=$(shell sed -E 's/^compressorCharsIn\s*,\s*([0-9]+)$$/\1/; t; d' $(root)/configFiles/lz.csv) \
	-DOUT_CHARS=$(shell sed -E 's/^compressorCharsOut\s*,\s*([0-9]+)$$/\1/; t; d' $(root)/configFiles/lz.csv)
LZCompressor$(TRACE_SIMPLESUFFIX).o: $(cppsrc)/DecoupledStreamModule.cpp $(root)/configFiles/lz.csv
	g++ $(OBJ_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $(LZCOMPRESSOR_CFLAGS) $< -o $@
LZCompressor$(TRACE_SIMPLESUFFIX).d: $(cppsrc)/DecoupledStreamModule.cpp $(root)/configFiles/lz.csv
	g++ $(DEP_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $(LZCOMPRESSOR_CFLAGS) $< -o $@
include LZCompressor$(TRACE_SIMPLESUFFIX).d

LZDECOMPRESSOR_CFLAGS := -DMODNAME=LZDecompressor \
	-DIN_CHARS=$(shell sed -E 's/^decompressorCharsIn\s*,\s*([0-9]+)$$/\1/; t; d' $(root)/configFiles/lz.csv) \
	-DOUT_CHARS=$(shell sed -E 's/^decompressorCharsOut\s*,\s*([0-9]+)$$/\1/; t; d' $(root)/configFiles/lz.csv)
LZDecompressor$(TRACE_SIMPLESUFFIX).o: $(cppsrc)/DecoupledStreamModule.cpp $(root)/configFiles/lz.csv
	g++ $(OBJ_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $(LZDECOMPRESSOR_CFLAGS) $< -o $@
LZDecompressor$(TRACE_SIMPLESUFFIX).d: $(cppsrc)/DecoupledStreamModule.cpp $(root)/configFiles/lz.csv
	g++ $(DEP_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $(LZDECOMPRESSOR_CFLAGS) $< -o $@
include LZDecompressor$(TRACE_SIMPLESUFFIX).d

Huffman_fused$(TRACE_SIMPLESUFFIX).o: $(cppsrc)/Huffman_fused.cpp
	g++ $(OBJ_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $< -o $@
Huffman_fused$(TRACE_SIMPLESUFFIX).d: $(cppsrc)/Huffman_fused.cpp
	g++ $(DEP_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $< -o $@
include Huffman_fused$(TRACE_SIMPLESUFFIX).d

Deflate_fused$(TRACE_SIMPLESUFFIX).o: $(cppsrc)/Deflate_fused.cpp
	g++ $(OBJ_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $< -o $@
Deflate_fused$(TRACE_SIMPLESUFFIX).d: $(cppsrc)/Deflate_fused.cpp
	g++ $(DEP_FLAGS) $(INCLUDES) $(TRACE_FLAGS) $< -o $@
include Deflate_fused$(TRACE_SIMPLESUFFIX).d

BitQueue$(TRACE_SIMPLESUFFIX).o: $(cppsrc)/BitQueue.c
	g++ $(OBJ_FLAGS) $< -o $@
BitQueue$(TRACE_SIMPLESUFFIX).d: $(cppsrc)/BitQueue.c
	g++ $(DEP_FLAGS) $< -o $@
include BitQueue$(TRACE_SIMPLESUFFIX).d
